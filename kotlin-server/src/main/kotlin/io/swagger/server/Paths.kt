/**
* RaspiAPI
* This is the server to function as interface for the rasperry pi in the alarm-clock project. It will provide options to interact with the local programs as well as Curl system data
*
* OpenAPI spec version: 1.0.0
* Contact: lorenz.keefer@web.de
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/package io.swagger.server

import io.ktor.application.ApplicationCall
import io.ktor.http.HttpMethod
import io.ktor.locations.*
import io.ktor.pipeline.PipelineContext
import io.ktor.routing.Route
import io.ktor.routing.method



// NOTE: ktor-location@0.9.0 is missing extension for Route.delete. This includes it.
inline fun <reified T : Any> Route.delete(noinline body: suspend PipelineContext<Unit, ApplicationCall>.(T) -> Unit): Route {
    return location(T::class) {
        method(HttpMethod.Delete) {
            handle(body)
        }
    }
}

object Paths {
    /**
     * Get all existing Alarm Clocks
     * Get all existing Alarm Clocks
     */
    @Location("/alarm_clock/all") class getAllAlarmClocks()

    /**
     * Check the temperature of your pi
     * 
     */
    @Location("/system_info/temperature") class checkTemp()

}
